import{_ as e,o,c,a as n,b as s,d as p,F as l,e as t,r as u}from"./app.d35c8f23.js";var r="/react-learn/assets/no-memo.75f6b824.gif",k="/react-learn/assets/memo.1fc80035.gif";const i={},b=t('<h1 id="usememo" tabindex="-1"><a class="header-anchor" href="#usememo" aria-hidden="true">#</a> useMemo</h1><p>useMemo \u5141\u8BB8\u6211\u4EEC<strong>\u7F13\u5B58\u4E00\u4E2A\u8BA1\u7B97\u7ED3\u679C</strong>\u3002\u5F53\u518D\u6B21\u6E32\u67D3\u7684\u65F6\u5019\uFF0C\u8FD4\u56DE\u4E0A\u4E00\u6B21\u7684\u7ED3\u679C\u800C\u4E0D\u662F\u91CD\u65B0\u8BA1\u7B97\u3002</p><h2 id="\u8BED\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u8BED\u6CD5" aria-hidden="true">#</a> \u8BED\u6CD5</h2><p><code>const cachedValue = useMemo(calculateValue, dependencies)</code></p><ul><li><p><code>calculateValue</code>: \u7F13\u5B58\u7684\u8BA1\u7B97\u7ED3\u679C\u3002 \u5F53\u5B83\u662F\u4E00\u4E2A\u51FD\u6570\u65F6\uFF0C\u4F1A\u7F13\u5B58\u8FD9\u4E2A\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u3002</p></li><li><p><code>dependencies</code>: \u4F9D\u8D56\u9879\u3002\u5F53\u4F9D\u8D56\u9879\u53D8\u5316\u65F6\uFF0C\u91CD\u65B0\u8BA1\u7B97\u7ED3\u679C\u3002</p></li></ul><h2 id="\u4F7F\u7528\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u573A\u666F" aria-hidden="true">#</a> \u4F7F\u7528\u573A\u666F</h2><ol><li>\u9632\u6B62\u7EC4\u4EF6\u91CD\u65B0\u6E32\u67D3</li></ol>',7),m={href:"https://codesandbox.io/s/memo-yin-yong-lei-xing-gxdfqt?file=/src/App.js",target:"_blank",rel:"noopener noreferrer"},d=n("p",null,"\u5F53 prop \u662F\u5BF9\u8C61\u3001\u6570\u7EC4\u6216\u51FD\u6570\u7684\u60C5\u51B5\uFF0C\u8FD9\u65F6\u5019\u53EF\u4EE5\u4F7F\u7528 useMemo \u914D\u5408 memo \u7F13\u5B58\u7EC4\u4EF6\u3002",-1),g=n("ol",{start:"2"},[n("li",null,"\u907F\u514D\u6602\u8D35\u7684\u8BA1\u7B97")],-1),f={href:"https://codesandbox.io/s/expensive-usememo-s3c1zo?file=/src/App.js",target:"_blank",rel:"noopener noreferrer"},w=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useMemo <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u6A21\u62DF\u590D\u6742\u7684\u8FD0\u7B97\uFF0C\u9700\u8981\u4E24\u79D2\u949F</span>
  <span class="token keyword">const</span> <span class="token function-variable function">getResult</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">onAddCount</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setCount</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">count</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> count <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span><span class="token punctuation">{</span>count<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span>onAddCount<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token operator">+</span>\u968F\u673A\u6570<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p><code>getResult</code> \u662F\u4E00\u4E2A\u8017\u65F6\u7684\u8BA1\u7B97\uFF0C\u9700\u8981\u4E24\u79D2\u949F\u3002\u8FD9\u5C31\u4F1A\u5BFC\u81F4\u6211\u4EEC\u6BCF\u6B21\u70B9\u51FB\u6309\u94AE\uFF0C\u90FD\u8981\u7B49\u5F85\u4E24\u79D2\u624D\u80FD\u54CD\u5E94\u3002\u5982\u679C\u6211\u4EEC\u4F7F\u7528 useMemo \u7F13\u5B58\u7ED3\u679C\uFF0C\u90A3\u4E48\u53EA\u6709\u7B2C\u4E00\u6B21\u9700\u8981\u7B49\u5F85\u4E24\u79D2\uFF0C\u540E\u9762\u90FD\u4F1A\u5FEB\u901F\u54CD\u5E94\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useMemo <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u4F7F\u7528useMemo\u7F13\u5B58\u590D\u6742\u7684\u8BA1\u7B97\u7ED3\u679C</span>
  <span class="token keyword">const</span> getResult <span class="token operator">=</span> <span class="token function">useMemo</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">onAddCount</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4F7F\u7528useMemo\u76F4\u63A5\u7F13\u5B58\u8BA1\u7B97\u7ED3\u679C\uFF0CgetResult\u662F\u7ED3\u679C\u4E0D\u662F\u51FD\u6570</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> getResult<span class="token punctuation">;</span>
    <span class="token function">setCount</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">count</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> count <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span><span class="token punctuation">{</span>count<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span>onAddCount<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token operator">+</span>\u968F\u673A\u6570<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><p>\u4F7F\u7528 useMemo \u524D\u7684\u6548\u679C\uFF1A</p><p><img src="`+r+'" alt="\u4F7F\u7528useMemo\u524D"></p><p>\u4F7F\u7528 useMemo \u540E\u7684\u6548\u679C\uFF1A</p><p><img src="'+k+'" alt="\u4F7F\u7528useMemo\u540E"></p>',7);function y(h,_){const a=u("ExternalLinkIcon");return o(),c(l,null,[b,n("p",null,[s("\u6BD4\u5982\u524D\u9762\u7684"),n("a",m,[s("\u4F8B\u5B50"),p(a)]),s(":")]),d,g,n("p",null,[s("\u6BD4\u5982\u4E0B\u9762\u8FD9\u4E2A"),n("a",f,[s("\u4F8B\u5B50"),p(a)])]),w],64)}var x=e(i,[["render",y],["__file","use-memo.html.vue"]]);export{x as default};
