import{_ as e,o,c,a as s,b as n,d as p,F as l,e as t,r}from"./app.bfc3344c.js";var u="/react-learn/assets/state-preserve.1f74858d.gif",i="/react-learn/assets/state-reset.eef5fb2d.gif";const k={},b=t(`<h1 id="usestate" tabindex="-1"><a class="header-anchor" href="#usestate" aria-hidden="true">#</a> useState</h1><p>\u4F7F\u7528 state \u9700\u8981\u6CE8\u610F\u4EE5\u4E0B\u51E0\u70B9\uFF1A</p><ul><li><p>\u5F53\u4E00\u4E2A\u7EC4\u4EF6\u9700\u8981\u5728<strong>\u591A\u6B21\u6E32\u67D3\u8BB0\u4F4F\u67D0\u4E9B\u4FE1\u606F</strong>\u65F6\uFF0C\u4F7F\u7528 state \u53D8\u91CF\u3002</p></li><li><p>\u8C03\u7528 Hook \u65F6\uFF0C\u5305\u62EC useState\uFF0C\u4EC5\u5728\u7EC4\u4EF6\u6216\u8005\u53E6\u4E00\u4E2A Hook \u7684<strong>\u9876\u5C42\u4F5C\u7528\u57DF</strong>\u8C03\u7528\u3002</p></li><li><p>state \u662F<strong>\u9694\u79BB\u4E14\u79C1\u6709</strong>\u7684\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u5C06\u4E00\u4E2A\u7EC4\u4EF6\u8C03\u7528\u4E24\u6B21\uFF0C\u4ED6\u4EEC\u5185\u90E8\u7684 state \u4E0D\u4F1A\u4E92\u76F8\u5F71\u54CD\u3002</p></li></ul><h2 id="_1-state-\u5982\u540C\u4E00\u5F20\u5FEB\u7167" tabindex="-1"><a class="header-anchor" href="#_1-state-\u5982\u540C\u4E00\u5F20\u5FEB\u7167" aria-hidden="true">#</a> 1. state \u5982\u540C\u4E00\u5F20\u5FEB\u7167</h2><p>\u5F53 React \u91CD\u65B0\u6E32\u67D3\u4E00\u4E2A\u7EC4\u4EF6\u65F6\uFF1A</p><ol><li>React \u4F1A\u518D\u6B21\u8C03\u7528\u4F60\u7684\u51FD\u6570</li><li>\u4F60\u7684\u51FD\u6570\u4F1A\u8FD4\u56DE\u65B0\u7684 JSX</li><li>React \u4F1A\u66F4\u65B0\u754C\u9762\u6765\u5339\u914D\u4F60\u8FD4\u56DE\u7684 JSX</li></ol><blockquote><p>\u4F5C\u4E3A\u4E00\u4E2A\u7EC4\u4EF6\u7684\u8BB0\u5FC6\uFF0Cstate \u4E0D\u540C\u4E8E\u5728\u4F60\u7684\u51FD\u6570\u8FD4\u56DE\u4E4B\u540E\u5C31\u4F1A\u6D88\u5931\u7684\u666E\u901A\u53D8\u91CF\u3002state \u5B9E\u9645\u4E0A\u201C\u6D3B\u201D\u5728 React \u672C\u8EAB\u4E2D\u2014\u2014\u5C31\u50CF\u88AB\u6446\u5728\u4E00\u4E2A\u67B6\u5B50\u4E0A\uFF01\u2014\u2014\u4F4D\u4E8E\u4F60\u7684\u51FD\u6570\u4E4B\u5916\u3002\u5F53 React \u8C03\u7528\u4F60\u7684\u7EC4\u4EF6\u65F6\uFF0C\u5B83\u4F1A\u4E3A\u7279\u5B9A\u7684\u90A3\u4E00\u6B21\u6E32\u67D3\u63D0\u4F9B\u4E00\u5F20 state \u5FEB\u7167\u3002\u4F60\u7684\u7EC4\u4EF6\u4F1A\u5728\u5176 JSX \u4E2D\u8FD4\u56DE\u4E00\u5F20\u5305\u542B\u4E00\u6574\u5957\u65B0\u7684 props \u548C\u4E8B\u4EF6\u5904\u7406\u51FD\u6570\u7684 UI \u5FEB\u7167 \uFF0C\u5176\u4E2D\u6240\u6709\u7684\u503C\u90FD\u662F \u6839\u636E\u90A3\u4E00\u6B21\u6E32\u67D3\u4E2D state \u7684\u503C \u88AB\u8BA1\u7B97\u51FA\u6765\u7684\uFF01</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Counter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>number<span class="token punctuation">,</span> setNumber<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span><span class="token punctuation">{</span>number<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>button
        onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">setNumber</span><span class="token punctuation">(</span>number <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token function">setNumber</span><span class="token punctuation">(</span>number <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token function">setNumber</span><span class="token punctuation">(</span>number <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
        <span class="token operator">+</span><span class="token number">3</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u4EE5\u4E0B\u662F\u8FD9\u4E2A\u6309\u94AE\u7684\u70B9\u51FB\u4E8B\u4EF6\u5904\u7406\u51FD\u6570\u901A\u77E5 React \u8981\u505A\u7684\u4E8B\u60C5\uFF1A</p><ol><li><code>setNumber(number + 1)</code>\uFF1A<code>number</code> \u662F 0 \u6240\u4EE5 <code>setNumber(0 + 1)</code>\u3002 React \u51C6\u5907\u5728\u4E0B\u4E00\u6B21\u6E32\u67D3\u65F6\u5C06 <code>number</code> \u66F4\u6539\u4E3A 1\u3002</li><li><code>setNumber(number + 1)</code>\uFF1A<code>number</code> \u662F 0 \u6240\u4EE5 <code>setNumber(0 + 1)</code>\u3002 React \u51C6\u5907\u5728\u4E0B\u4E00\u6B21\u6E32\u67D3\u65F6\u5C06 <code>number</code> \u66F4\u6539\u4E3A 1\u3002</li><li><code>setNumber(number + 1)</code>\uFF1A<code>number</code> \u662F 0 \u6240\u4EE5 <code>setNumber(0 + 1)</code>\u3002 React \u51C6\u5907\u5728\u4E0B\u4E00\u6B21\u6E32\u67D3\u65F6\u5C06 <code>number</code> \u66F4\u6539\u4E3A 1\u3002</li></ol><p>\u5C3D\u7BA1\u4F60\u8C03\u7528\u4E86\u4E09\u6B21 <code>setNumber(number + 1)</code>\uFF0C\u4F46\u5728\u8FD9\u6B21\u6E32\u67D3\u7684 \u4E8B\u4EF6\u5904\u7406\u51FD\u6570\u4E2D <code>number</code> \u4F1A\u4E00\u76F4\u662F 0\uFF0C\u6240\u4EE5\u4F60\u4F1A\u4E09\u6B21\u5C06 state \u8BBE\u7F6E\u6210 1\u3002\u8FD9\u5C31\u662F\u4E3A\u4EC0\u4E48\u5728\u4F60\u7684\u4E8B\u4EF6\u5904\u7406\u51FD\u6570\u6267\u884C\u5B8C\u4EE5\u540E\uFF0CReact \u91CD\u65B0\u6E32\u67D3\u7684\u7EC4\u4EF6\u4E2D\u7684 <code>number</code> \u7B49\u4E8E 1 \u800C\u4E0D\u662F 3\u3002</p><p>\u4E3A\u4E86\u66F4\u597D\u7406\u89E3\uFF0C\u6211\u4EEC\u770B\u4E0B\u9762\u8FD9\u4E2A\u4F8B\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Counter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>number<span class="token punctuation">,</span> setNumber<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span><span class="token punctuation">{</span>number<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>button
        onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">setNumber</span><span class="token punctuation">(</span>number <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">alert</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
        <span class="token operator">+</span><span class="token number">5</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>\u70B9\u51FB+5 \u540E\uFF0C\u5F39\u51FA\u7684\u6570\u5B57\u662F 0\uFF0C\u800C\u4E0D\u662F 5. \u70B9\u51FB\u6309\u94AE\u540E\u7684\u64CD\u4F5C\uFF1A</p><ol><li><code>setNumber(0+5)</code></li><li><code>js setTimeout(() =&gt; { alert(0) })</code></li></ol><h2 id="_2-\u5C06-state-\u52A0\u5165\u961F\u5217" tabindex="-1"><a class="header-anchor" href="#_2-\u5C06-state-\u52A0\u5165\u961F\u5217" aria-hidden="true">#</a> 2. \u5C06 state \u52A0\u5165\u961F\u5217</h2><p>React \u4F1A\u5BF9 state \u66F4\u65B0\u8FDB\u884C\u6279\u5904\u7406\u3002\u5728\u4E0A\u9762\u7684\u793A\u4F8B\u4E2D\uFF0C\u8FDE\u7EED\u8C03\u7528\u4E86\u4E09\u6B21<code>setNumber(number + 1)</code>\u5E76\u4E0D\u80FD\u5F97\u5230\u6211\u4EEC\u60F3\u8981\u7684\u7ED3\u679C\u3002</p><p><strong>React \u4F1A\u7B49\u5230\u4E8B\u4EF6\u5904\u7406\u51FD\u6570\u4E2D\u7684\u6240\u6709\u4EE3\u7801\u90FD\u8FD0\u884C\u5B8C\u6BD5\u518D\u5904\u7406\u4F60\u7684 state \u66F4\u65B0\u3002</strong></p><p>\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7\u66F4\u65B0\u51FD\u6570\u6765\u5728\u4E0B\u6B21\u6E32\u67D3\u4E4B\u524D\u591A\u6B21\u66F4\u65B0\u540C\u4E00\u4E2A state\u3002\u6BD4\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Counter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>number<span class="token punctuation">,</span> setNumber<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span><span class="token punctuation">{</span>number<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>button
        onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">setNumber</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token function">setNumber</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token function">setNumber</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
        <span class="token operator">+</span><span class="token number">3</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u4E0B\u9762\u662F React \u5728\u6267\u884C\u4E8B\u4EF6\u5904\u7406\u51FD\u6570\u65F6\u5904\u7406\u8FD9\u51E0\u884C\u4EE3\u7801\u7684\u8FC7\u7A0B\uFF1A</p><ol><li><code>setNumber(n =&gt; n + 1)</code>\uFF1A<code>n =&gt; n + 1</code> \u662F\u4E00\u4E2A\u51FD\u6570\u3002React \u5C06\u5B83\u52A0\u5165\u961F\u5217\u3002</li><li><code>setNumber(n =&gt; n + 1)</code>\uFF1A<code>n =&gt; n + 1</code> \u662F\u4E00\u4E2A\u51FD\u6570\u3002React \u5C06\u5B83\u52A0\u5165\u961F\u5217\u3002</li><li><code>setNumber(n =&gt; n + 1)</code>\uFF1A<code>n =&gt; n + 1</code> \u662F\u4E00\u4E2A\u51FD\u6570\u3002React \u5C06\u5B83\u52A0\u5165\u961F\u5217\u3002</li></ol><p>\u5F53\u4F60\u5728\u4E0B\u6B21\u6E32\u67D3\u671F\u95F4\u8C03\u7528 useState \u65F6\uFF0CReact \u4F1A\u904D\u5386\u961F\u5217\u3002\u4E4B\u524D\u7684 number state \u7684\u503C\u662F 0\uFF0C\u6240\u4EE5\u8FD9\u5C31\u662F React \u4F5C\u4E3A\u53C2\u6570 n \u4F20\u9012\u7ED9\u7B2C\u4E00\u4E2A\u66F4\u65B0\u51FD\u6570\u7684\u503C\u3002\u7136\u540E React \u4F1A\u83B7\u53D6\u4F60\u4E0A\u4E00\u4E2A\u66F4\u65B0\u51FD\u6570\u7684\u8FD4\u56DE\u503C\uFF0C\u5E76\u5C06\u5176\u4F5C\u4E3A n \u4F20\u9012\u7ED9\u4E0B\u4E00\u4E2A\u66F4\u65B0\u51FD\u6570\uFF0C\u4EE5\u6B64\u7C7B\u63A8\uFF1A</p><table><thead><tr><th style="text-align:left;">\u66F4\u65B0\u961F\u5217</th><th style="text-align:center;">n</th><th style="text-align:right;">\u8FD4\u56DE\u503C</th></tr></thead><tbody><tr><td style="text-align:left;">n =&gt; n + 1</td><td style="text-align:center;">0</td><td style="text-align:right;">0 + 1 = 1</td></tr><tr><td style="text-align:left;">n =&gt; n + 1</td><td style="text-align:center;">1</td><td style="text-align:right;">1 + 1 = 2</td></tr><tr><td style="text-align:left;">n =&gt; n + 1</td><td style="text-align:center;">2</td><td style="text-align:right;">2 + 1 = 3</td></tr></tbody></table><p>\u770B\u770B\u4E0B\u9762\u8FD9\u4E2A\u4F8B\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Counter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>number<span class="token punctuation">,</span> setNumber<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span><span class="token punctuation">{</span>number<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>button
        onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">setNumber</span><span class="token punctuation">(</span>number <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token function">setNumber</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token function">setNumber</span><span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
        \u589E\u52A0\u6570\u5B57
      <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u4EE5\u4E0B\u662F React \u5728\u6267\u884C\u4E8B\u4EF6\u5904\u7406\u51FD\u6570\u65F6\u5904\u7406\u8FD9\u51E0\u884C\u4EE3\u7801\u7684\u8FC7\u7A0B\uFF1A</p><ol><li><code>setNumber(number + 5)</code>\uFF1A<code>number</code> \u4E3A 0\uFF0C\u6240\u4EE5 <code>setNumber(0 + 5)</code>\u3002React \u5C06 \u201C\u66FF\u6362\u4E3A 5\u201D \u6DFB\u52A0\u5230\u5176\u961F\u5217\u4E2D\u3002</li><li><code>setNumber(n =&gt; n + 1)</code>\uFF1A<code>n =&gt; n + 1</code> \u662F\u4E00\u4E2A\u66F4\u65B0\u51FD\u6570\u3002React \u5C06\u8BE5\u51FD\u6570\u6DFB\u52A0\u5230\u5176\u961F\u5217\u4E2D\u3002</li><li><code>setNumber(42)</code>\uFF1AReact \u5C06 \u201C\u66FF\u6362\u4E3A 42\u201D \u6DFB\u52A0\u5230\u5176\u961F\u5217\u4E2D\u3002</li></ol><p>\u5728\u4E0B\u4E00\u6B21\u6E32\u67D3\u671F\u95F4\uFF0CReact \u4F1A\u904D\u5386 state \u961F\u5217\uFF1A</p><table><thead><tr><th style="text-align:left;">\u66F4\u65B0\u961F\u5217</th><th style="text-align:center;">n</th><th style="text-align:right;">\u8FD4\u56DE\u503C</th></tr></thead><tbody><tr><td style="text-align:left;">\u66FF\u6362\u4E3A 5</td><td style="text-align:center;">0</td><td style="text-align:right;">5</td></tr><tr><td style="text-align:left;">n =&gt; n + 1</td><td style="text-align:center;">5</td><td style="text-align:right;">5 + 1 = 6</td></tr><tr><td style="text-align:left;">\u66FF\u6362\u4E3A 42</td><td style="text-align:center;">6</td><td style="text-align:right;">42</td></tr></tbody></table><p>\u53EF\u4EE5\u8FD9\u6837\u6765\u7406\u89E3\u72B6\u6001\u961F\u5217\u7684\u66F4\u65B0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getFinalState</span><span class="token punctuation">(</span><span class="token parameter">baseState<span class="token punctuation">,</span> queue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> finalState <span class="token operator">=</span> baseState<span class="token punctuation">;</span>
  queue<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">update</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    finalState <span class="token operator">=</span> <span class="token keyword">typeof</span> update <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">?</span> <span class="token function">update</span><span class="token punctuation">(</span>finalState<span class="token punctuation">)</span> <span class="token operator">:</span> update<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> finalState<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u5176\u4E2D baseState \u662F\u521D\u59CB\u72B6\u6001\uFF0Cqueue \u662F\u72B6\u6001\u66F4\u65B0\u961F\u5217\uFF0C\u5305\u62EC\u6570\u636E\u548C\u66F4\u65B0\u51FD\u6570\u3002</p><h2 id="_3-set-\u51FD\u6570\u4E00\u5B9A\u4F1A\u89E6\u53D1\u66F4\u65B0\u5417" tabindex="-1"><a class="header-anchor" href="#_3-set-\u51FD\u6570\u4E00\u5B9A\u4F1A\u89E6\u53D1\u66F4\u65B0\u5417" aria-hidden="true">#</a> 3. set \u51FD\u6570\u4E00\u5B9A\u4F1A\u89E6\u53D1\u66F4\u65B0\u5417\uFF1F</h2><p>\u770B\u4E0B\u9762\u8FD9\u4E2A\u4F8B\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Counter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>number<span class="token punctuation">,</span> setNumber<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>person<span class="token punctuation">,</span> setPerson<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;jack&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6E32\u67D3&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>button
        onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">setNumber</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
        \u589E\u52A0\u6570\u5B57
      <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span><span class="token punctuation">{</span>number<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>button
        onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          person<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">18</span><span class="token punctuation">;</span>
          <span class="token function">setPerson</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
        \u4FEE\u6539\u5BF9\u8C61
      <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>\u7EC4\u4EF6\u7684\u66F4\u65B0\u610F\u5473\u7740\u7EC4\u4EF6\u51FD\u6570\u7684\u91CD\u65B0\u6267\u884C\u3002\u5BF9\u4E8E\u4E0A\u9762\u8FD9\u4E2A\u4F8B\u5B50\uFF0C\u65E0\u8BBA\u662F\u70B9\u51FB <code>\u589E\u52A0\u6570\u5B57</code> \u8FD8\u662F <code>\u6539\u53D8\u5BF9\u8C61</code> \u90FD\u6CA1\u6709\u6253\u5370 <code>\u6E32\u67D3</code>\u3002</p><p>set \u51FD\u6570\u89E6\u53D1\u66F4\u65B0\u7684\u6761\u4EF6\uFF1A</p><ul><li><strong>\u503C\u7C7B\u578B\uFF0Cstate \u7684\u503C\u6539\u53D8</strong></li><li><strong>\u5F15\u7528\u7C7B\u578B\uFF0Cstate \u7684\u5F15\u7528\u6539\u53D8</strong></li></ul><p>\u5BF9\u4E8E\u4E0A\u9762\u7684\u4F8B\u5B50\uFF1A</p><ul><li>number \u662F\u503C\u7C7B\u578B\u3002\u70B9\u51FB\u589E\u52A0\u6570\u5B57\uFF0C\u503C\u6CA1\u6709\u6539\u53D8\uFF0C\u4E0D\u4F1A\u89E6\u53D1\u66F4\u65B0\u3002</li><li>person \u662F\u5F15\u7528\u7C7B\u578B\u3002\u70B9\u51FB\u4FEE\u6539\u5BF9\u8C61\uFF0C\u867D\u7136 person \u5BF9\u8C61\u7684\u503C\u867D\u7136\u53D8\u5316\u4E86\uFF0C\u4F46\u662F\u5F15\u7528\u5730\u5740\u6CA1\u6709\u53D8\u5316\uFF0C\u56E0\u6B64\u4E5F\u4E0D\u4F1A\u89E6\u53D1\u66F4\u65B0\u3002</li></ul><h2 id="_4-\u6784\u5EFA-state-\u7684\u539F\u5219" tabindex="-1"><a class="header-anchor" href="#_4-\u6784\u5EFA-state-\u7684\u539F\u5219" aria-hidden="true">#</a> 4. \u6784\u5EFA state \u7684\u539F\u5219</h2><ol><li>\u5408\u5E76\u5173\u8054\u7684 state</li></ol><p>\u6709\u65F6\u5019\u6211\u4EEC\u53EF\u80FD\u4F1A\u4E0D\u786E\u5B9A\u4F7F\u7528\u5355\u4E2A state \u8FD8\u662F\u591A\u4E2A state \u53D8\u91CF\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">[</span>x<span class="token punctuation">,</span> setX<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>y<span class="token punctuation">,</span> setY<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u6216</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">[</span>position<span class="token punctuation">,</span> setPosition<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u4ECE\u6280\u672F\u4E0A\u8BB2\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528\u5176\u4E2D\u4EFB\u4F55\u4E00\u79CD\u65B9\u6CD5\u3002\u4F46\u662F\uFF0C<strong>\u5982\u679C\u67D0\u4E24\u4E2A state \u53D8\u91CF\u603B\u662F\u4E00\u8D77\u53D8\u5316\uFF0C\u5219\u5C06\u5B83\u4EEC\u7EDF\u4E00\u6210\u4E00\u4E2A state \u53D8\u91CF\u53EF\u80FD\u66F4\u597D</strong>\u3002\u8FD9\u6837\u4F60\u5C31\u4E0D\u4F1A\u5FD8\u8BB0\u8BA9\u5B83\u4EEC\u59CB\u7EC8\u4FDD\u6301\u540C\u6B65\u3002</p><ol start="2"><li>\u907F\u514D\u77DB\u76FE\u7684 state</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Send</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>isSending<span class="token punctuation">,</span> setIsSending<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>isSent<span class="token punctuation">,</span> setIsSent<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>button
        onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">setIsSent</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token function">setIsSending</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">setIsSending</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">setIsSent</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
        \u53D1\u9001
      <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
      <span class="token punctuation">{</span>isSending <span class="token operator">&amp;&amp;</span> <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span>\u6B63\u5728\u53D1\u9001<span class="token operator">...</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span><span class="token punctuation">}</span>
      <span class="token punctuation">{</span>isSent <span class="token operator">&amp;&amp;</span> <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span>\u53D1\u9001\u5B8C\u6210<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span><span class="token punctuation">}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>\u5C3D\u7BA1\u8FD9\u6BB5\u4EE3\u7801\u662F\u6709\u6548\u7684\uFF0C\u4F46\u4E5F\u4F1A\u8BA9\u4E00\u4E9B state \u201C\u6781\u96BE\u5904\u7406\u201D\u3002\u4F8B\u5982\uFF0C\u5982\u679C\u4F60\u5FD8\u8BB0\u540C\u65F6\u8C03\u7528 <code>setIsSent</code> \u548C <code>setIsSending</code>\uFF0C\u5219\u53EF\u80FD\u4F1A\u51FA\u73B0 \u4E8C\u8005 \u540C\u65F6\u4E3A true \u7684\u60C5\u51B5\u3002</p><p>\u53EF\u4EE5\u7528\u4E00\u4E2A status \u53D8\u91CF\u6765\u4EE3\u66FF\u5B83\u4EEC\u3002\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Send</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>status<span class="token punctuation">,</span> setStatus<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;init&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>button
        onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token string">&#39;sending&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token string">&#39;sent&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
        \u53D1\u9001
      <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
      <span class="token punctuation">{</span>status <span class="token operator">===</span> <span class="token string">&#39;sending&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span>\u6B63\u5728\u53D1\u9001<span class="token operator">...</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span><span class="token punctuation">}</span>
      <span class="token punctuation">{</span>status <span class="token operator">===</span> <span class="token string">&#39;sent&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span>\u53D1\u9001\u5B8C\u6210<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span><span class="token punctuation">}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><ol start="3"><li>\u907F\u514D\u5197\u4F59\u7684 state</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>firstName<span class="token punctuation">,</span> setFirstName<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>lastName<span class="token punctuation">,</span> setLastName<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fullName<span class="token punctuation">,</span> setFullName<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span>First Name<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>input
        value<span class="token operator">=</span><span class="token punctuation">{</span>firstName<span class="token punctuation">}</span>
        onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">setFirstName</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token function">setFullName</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token string">&#39; &#39;</span> <span class="token operator">+</span> lastName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span>
      <span class="token operator">/</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span>Last Name<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>input
        value<span class="token operator">=</span><span class="token punctuation">{</span>lastName<span class="token punctuation">}</span>
        onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">setLastName</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token function">setFullName</span><span class="token punctuation">(</span>firstName <span class="token operator">+</span> <span class="token string">&#39; &#39;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span>
      <span class="token operator">/</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span><span class="token punctuation">{</span>fullName<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><p>\u80FD\u591F\u770B\u51FA\uFF0CfullName \u662F\u5197\u4F59\u7684 state\u3002\u6211\u4EEC\u53EF\u4EE5\u76F4\u63A5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fullName <span class="token operator">=</span> firstName <span class="token operator">+</span> <span class="token string">&#39; &#39;</span> <span class="token operator">+</span> lastName<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u65E0\u9700\u518D\u628A fullName \u5B58\u653E\u5230 state \u4E2D\u3002</p><ol start="4"><li>\u907F\u514D\u91CD\u590D\u7684 state</li></ol><p>\u6709\u65F6\u5019\uFF0C\u5728\u6211\u4EEC\u5B58\u50A8\u7684 state \u4E2D\uFF0C\u53EF\u80FD\u6709\u4E24\u4E2A state \u6709\u91CD\u5408\u7684\u90E8\u5206\u3002\u8FD9\u65F6\u5019\u6211\u4EEC\u5C31\u8981\u8003\u8651\u662F\u4E0D\u662F\u6709\u91CD\u590D\u7684\u95EE\u9898\u4E86\u3002</p>`,60),m={href:"https://react.docschina.org/learn/choosing-the-state-structure#avoid-duplication-in-state",target:"_blank",rel:"noopener noreferrer"},d=s("h2",{id:"_5-\u4FDD\u5B58\u548C\u91CD\u7F6E-state",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_5-\u4FDD\u5B58\u548C\u91CD\u7F6E-state","aria-hidden":"true"},"#"),n(" 5. \u4FDD\u5B58\u548C\u91CD\u7F6E state")],-1),g={href:"https://codesandbox.io/s/kz8tr8?file=%2FApp.js&utm_medium=sandpack",target:"_blank",rel:"noopener noreferrer"},f=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>isFancy<span class="token punctuation">,</span> setIsFancy<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
      <span class="token punctuation">{</span>isFancy <span class="token operator">?</span> <span class="token operator">&lt;</span>Counter isFancy<span class="token operator">=</span><span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span> <span class="token operator">:</span> <span class="token operator">&lt;</span>Counter isFancy<span class="token operator">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">}</span>
      <span class="token operator">&lt;</span>label<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>input
          type<span class="token operator">=</span><span class="token string">&#39;checkbox&#39;</span>
          checked<span class="token operator">=</span><span class="token punctuation">{</span>isFancy<span class="token punctuation">}</span>
          onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">setIsFancy</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>checked<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">}</span>
        <span class="token operator">/</span><span class="token operator">&gt;</span>
        \u4F7F\u7528\u597D\u770B\u7684\u6837\u5F0F
      <span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">Counter</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> isFancy <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>score<span class="token punctuation">,</span> setScore<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>hover<span class="token punctuation">,</span> setHover<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">let</span> className <span class="token operator">=</span> <span class="token string">&#39;counter&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>hover<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    className <span class="token operator">+=</span> <span class="token string">&#39; hover&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>isFancy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    className <span class="token operator">+=</span> <span class="token string">&#39; fancy&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token punctuation">{</span>className<span class="token punctuation">}</span> onPointerEnter<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setHover</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">}</span> onPointerLeave<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setHover</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span><span class="token punctuation">{</span>score<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setScore</span><span class="token punctuation">(</span>score <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>\u52A0\u4E00<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><p>\u5F53\u6211\u4EEC\u4FEE\u6539\u4E86 <code>Counter</code>\u7EC4\u4EF6 \u7684 state \u540E\uFF0C\u70B9\u51FB <code>checkbox</code> \u5207\u6362\u5230\u53E6\u4E00\u4E2A <code>Counter</code>\uFF0C\u65E7 <code>Counter</code> \u7684 state \u5E76\u6CA1\u6709\u53D8\u4E3A 0\uFF0C\u800C\u662F\u4FDD\u7559\u4E86\u4E0B\u6765\u3002\u5982\u4E0B\u56FE\uFF1A</p><p><img src="`+u+`" alt=""></p><p>\u5728 React \u4E2D\uFF0C<strong>\u76F8\u540C\u4F4D\u7F6E\u7684\u76F8\u540C\u7EC4\u4EF6\u4F1A\u4F7F\u5F97 state \u4FDD\u7559\u4E0B\u6765</strong>\u3002\u90A3\u4E48\u600E\u4E48\u624D\u80FD\u8BA9\u4E0A\u8FF0\u4F8B\u5B50\u7684 state \u91CD\u7F6E\u5462\uFF1F</p><p>\u6709\u4E24\u79CD\u65B9\u6CD5\uFF1A</p><p><strong>1. \u5C06\u7EC4\u4EF6\u6E32\u67D3\u5728\u4E0D\u540C\u7684\u4F4D\u7F6E</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  isFancy <span class="token operator">?</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>Counter isFancy<span class="token operator">=</span><span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>Counter isFancy<span class="token operator">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><strong>2. \u4F7F\u7528 key \u6765\u6807\u8BC6\u7EC4\u4EF6</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  isFancy <span class="token operator">?</span> <span class="token operator">&lt;</span>Counter isFancy<span class="token operator">=</span><span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">}</span> key<span class="token operator">=</span><span class="token punctuation">{</span>fancyTrue<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span> <span class="token operator">:</span> <span class="token operator">&lt;</span>Counter isFancy<span class="token operator">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span> key<span class="token operator">=</span><span class="token punctuation">{</span>fancyFalse<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u6548\u679C\u5982\u4E0B\uFF1A</p><p><img src="`+i+'" alt=""></p>',11);function y(h,v){const a=r("ExternalLinkIcon");return o(),c(l,null,[b,s("p",null,[n("\u5177\u4F53\u4F8B\u5B50\u89C1"),s("a",m,[n("\u8FD9\u91CC"),p(a)])]),d,s("p",null,[n("\u524D\u9762\u6211\u4EEC\u8BF4\u8FC7\uFF0C\u7EC4\u4EF6\u5185\u90E8\u7684 state \u662F\u4E92\u76F8\u9694\u79BB\u7684\u3002\u4E00\u4E2A\u7EC4\u4EF6 state \u7684\u6539\u53D8\u4E0D\u4F1A\u5F71\u54CD\u53E6\u5916\u4E00\u4E2A\u3002\u7136\u800C\uFF0C\u6211\u4EEC\u770B\u4E0B\u9762\u8FD9\u4E2A"),s("a",g,[n("\u4F8B\u5B50"),p(a)]),n("\uFF1A")]),f],64)}var x=e(k,[["render",y],["__file","use-state.html.vue"]]);export{x as default};
