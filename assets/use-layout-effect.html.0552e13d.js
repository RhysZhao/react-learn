import{_ as t,o as p,c as o,a as s,b as n,d as c,F as l,e as a,r as u}from"./app.baf90ae5.js";const r={},i=a('<h1 id="uselayouteffect" tabindex="-1"><a class="header-anchor" href="#uselayouteffect" aria-hidden="true">#</a> useLayoutEffect</h1><p>useLayoutEffect \u8DDF useEffect \u552F\u4E00\u7684\u4E0D\u540C\u5C31\u662F\u4E8C\u8005\u7684<strong>\u6267\u884C\u65F6\u673A\u4E0D\u540C\u3002</strong></p><p>\u524D\u9762\u8BF4\u8FC7\uFF0C\u5BF9\u4E8E\u4E00\u6B21\u66F4\u65B0\u6709\u4E09\u4E2A\u9636\u6BB5\uFF1A<strong>\u89E6\u53D1</strong>\u3001<strong>\u6E32\u67D3(render)</strong> \u548C <strong>\u63D0\u4EA4(commit)</strong>\u3002</p><p>render \u9636\u6BB5\u4E3B\u8981\u662F\u7EC4\u4EF6\u51FD\u6570\u6267\u884C\uFF0Cjsx \u8F6C\u5316\u4E3A Fiber \u7B49\u5DE5\u4F5C\u3002</p><p>commit \u9636\u6BB5\u4E3B\u8981\u662F\u628A\u66F4\u6539\u53CD\u6620\u5230\u6D4F\u89C8\u5668\u4E0A\uFF0C\u7C7B\u4F3C <code>document.appendChild()</code>\u4E4B\u7C7B\u7684\u64CD\u4F5C\u3002</p><p><strong>useEffect \u5728 commit \u9636\u6BB5\u5B8C\u6210\u540E\u6267\u884C\u3002</strong></p><p><strong>useLayoutEffect \u5728 commit \u9636\u6BB5\u4E4B\u524D\u6267\u884C\u3002</strong></p><p>\u7531\u4E8E commit \u9636\u6BB5\u4E3B\u8981\u662F\u9875\u9762\u66F4\u65B0\u7684\u64CD\u4F5C\uFF0C\u56E0\u6B64<code>useLayoutEffect</code> \u4F1A\u963B\u585E\u9875\u9762\u66F4\u65B0\u3002</p>',8),k={href:"https://codesandbox.io/s/use-layout-effect-4q52gd?file=/src/App.js",target:"_blank",rel:"noopener noreferrer"},m=a(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useEffect<span class="token punctuation">,</span> useLayoutEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>text<span class="token punctuation">,</span> setText<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;11111&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;useEffect&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">100000000</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      i<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">&#39;00000&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// useLayoutEffect(() =&gt; {</span>
  <span class="token comment">//   console.log(&quot;useLayoutEffect&quot;);</span>
  <span class="token comment">//   let i = 0;</span>
  <span class="token comment">//   while (i &lt; 100000000) {</span>
  <span class="token comment">//     i++;</span>
  <span class="token comment">//   }</span>
  <span class="token comment">//   setText(&quot;00000&quot;);</span>
  <span class="token comment">// }, []);</span>

  <span class="token keyword">return</span> <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span><span class="token punctuation">{</span>text<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>\u4F7F\u7528 <code>useEffect</code> \u9875\u9762\u4F1A\u6709\u660E\u663E\u7684\u4ECE <code>11111</code> \u53D8\u6210 <code>00000</code> \u7684\u8FC7\u7A0B\u3002\u4F7F\u7528 <code>useLayoutEffect</code> \u5219\u4E0D\u4F1A\u3002</p><p>\u8BA9\u6211\u4EEC\u68B3\u7406\u4E0B\u6267\u884C\u6D41\u7A0B\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>useEffect: render =&gt; commit(\u53CD\u6620\u5230\u9875\u9762\u4E0A) =&gt; useEffect =&gt; render =&gt; commit(\u53CD\u6620\u5230\u9875\u9762\u4E0A)

useLayoutEffect: render =&gt; useEffect =&gt; render =&gt; commit(\u53CD\u6620\u5230\u9875\u9762\u4E0A)
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><code>useLayoutEffect</code> \u6267\u884C\u540E\u53D1\u73B0 state \u66F4\u65B0\uFF0C\u5C31\u4E0D\u518D\u628A <code>11111</code> \u53CD\u6620\u5230\u9875\u9762\u4E0A\u4E86\uFF0C\u76F4\u63A5\u518D\u6B21\u6267\u884C react \u6E32\u67D3\u3002\u56E0\u6B64\u6211\u4EEC\u6CA1\u6709\u770B\u5230\u4ECE <code>11111</code> \u95EA\u70C1\u6210 <code>00000</code> \u7684\u8FC7\u7A0B\u3002</p>`,5);function d(b,f){const e=u("ExternalLinkIcon");return p(),o(l,null,[i,s("p",null,[n("\u6BD4\u5982\u8FD9\u4E2A"),s("a",k,[n("\u4F8B\u5B50"),c(e)]),n(":")]),m],64)}var y=t(r,[["render",d],["__file","use-layout-effect.html.vue"]]);export{y as default};
